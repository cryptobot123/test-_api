{
  "manifest": {
    "name": "express-unless",
    "description": "Conditionally add a middleware to express with some common patterns.",
    "version": "0.5.0",
    "license": "MIT",
    "repository": {
      "url": "git://github.com/jfromaniello/express-unless.git"
    },
    "author": {
      "name": "José F. Romaniello",
      "email": "jfromaniello@gmail.com",
      "url": "http://joseoncode.com"
    },
    "main": "index.js",
    "scripts": {
      "test": "mocha -R spec"
    },
    "dependencies": {},
    "devDependencies": {
      "mocha": "~1.11.0",
      "chai": "~1.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/app/.cache/yarn/v6/npm-express-unless-0.5.0-c2ece477f4155089143dbb869d07c57c5eb6ab9b-integrity/node_modules/express-unless/package.json",
    "readmeFilename": "README.md",
    "readme": "Conditionally skip a middleware when a condition is met.\n\n## Install\n\n\tnpm i express-unless --save\n\n## Usage\n\nWith existing middlewares:\n\n```javascript\nvar unless = require('express-unless');\n\n\nvar static = express.static(__dirname + '/public');\nstatic.unless = unless;\n\napp.use(static.unless({ method: 'OPTIONS' }));\n```\n\nIf you are authoring a middleware you can support unless as follow:\n\n```javascript\nmodule.exports = function (middlewareOptions) {\n  var mymid = function (req, res, next) {\n\n  };\n\n  mymid.unless = require('express-unless');\n\n  return mymid;\n};\n```\n\n## Current options\n\n-  `method` it could be an string or an array of strings. If the request method match the middleware will not run.\n-  `path` it could be an string, a regexp or an array of any of those. It also could be an array of object which is url and methods key-pairs. If the request path or path and method match, the middleware will not run. Check [Examples](#examples) for usage.\n-  `ext` it could be an string or an array of strings. If the request path ends with one of these extensions the middleware will not run.\n-  `custom` it must be a function that accepts `req` and returns `true` / `false`. If the function returns true for the given request, ithe middleware will not run.\n-  `useOriginalUrl` it should be `true` or `false`, default is `true`. if false, `path` will match against `req.url` instead of `req.originalUrl`. Please refer to [Express API](http://expressjs.com/4x/api.html#request) for the difference between `req.url` and `req.originalUrl`.\n\n\n## Examples\n\nRequire authentication for every request unless the path is index.html.\n\n```javascript\napp.use(requiresAuth.unless({\n  path: [\n    '/index.html',\n    { url: '/', methods: ['GET', 'PUT']  }\n  ]\n}))\n```\n\nAvoid a fstat for request to routes doesnt end with a given extension.\n\n```javascript\napp.use(static.unless(function (req) {\n  var ext = url.parse(req.originalUrl).pathname.substr(-4);\n  return !~['.jpg', '.html', '.css', '.js'].indexOf(ext);\n}));\n```\n\n## License\n\nMIT 2014 - Jose Romaniello\n",
    "licenseText": "MIT License\n\nCopyright (c) 2014 José F. Romaniello\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/express-unless/-/express-unless-0.5.0.tgz#c2ece477f4155089143dbb869d07c57c5eb6ab9b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/express-unless/-/express-unless-0.5.0.tgz",
    "hash": "c2ece477f4155089143dbb869d07c57c5eb6ab9b",
    "integrity": "sha1-wuzkd/QVUIkUPbuGnQfFfF62q5s=",
    "registry": "npm",
    "packageName": "express-unless",
    "cacheIntegrity": "sha512-YUFjaXyK1otz5Q3Ajg6ZAHk2KVvzsL+e7T4gX0zNPfwKOb6u6xOththUiIc/990VH6xkqjSYYL1hJs38cjiTtw== sha1-wuzkd/QVUIkUPbuGnQfFfF62q5s="
  },
  "registry": "npm",
  "hash": "c2ece477f4155089143dbb869d07c57c5eb6ab9b"
}